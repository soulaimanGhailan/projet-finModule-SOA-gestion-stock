spring.application.name=orders-service
server.port=8080
spring.jackson.deserialization.fail-on-unknown-properties=true



spring.cloud.config.discovery.enabled=false
spring.cloud.config.enabled=false
eureka.client.enabled=false
spring.datasource.url=jdbc:h2:mem:orders-db


#spring.data.mongodb.host=${MONGODB_HOST:10.10.9.128}
#spring.data.mongodb.port=${MONGODB_PORT:27017}
#spring.data.mongodb.authentication-database=admin
#spring.data.mongodb.username=${MONGODB_USERNAME:admin}
#spring.data.mongodb.password=${MONGODB_PASSWORD:password}
#spring.data.mongodb.database=product-db
#spring.data.mongodb.auto-index-creation=true



spring.kafka.bootstrap-servers=10.10.9.128:9091,10.10.9.128:9092,10.10.9.128:9093
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.properties.delivery.timeout.ms=120000
spring.kafka.producer.properties.linger.ms=0
spring.kafka.producer.properties.request.timeout.ms=30000
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.consumer.group-id=orders-ms
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=fpl.soa.common.*

orders.events.topic.name=orders-events
products.commands.topic.name=products-commands
products.events.topic.name=products-events

payments.commands.topic.name=payments-commands
payments.events.topic.name=payments-events
orders.commands.topic.name=orders-commands