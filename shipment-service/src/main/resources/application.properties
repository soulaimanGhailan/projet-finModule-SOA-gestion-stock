spring.application.name=shipment-service

server.port=${SERVER_PORT:8085}



spring.cloud.config.enabled=false
management.endpoints.web.exposure.include=*
spring.cloud.discovery.enabled=true
eureka.client.service-url.defaultZone=${DISCOVERY_SERVICE_URL:http://localhost:8761/eureka}

spring.datasource.url=jdbc:h2:mem:shipmentEntity-db

spring.jackson.deserialization.fail-on-unknown-properties=true

spring.kafka.admin.auto-create=false
spring.kafka.bootstrap-servers=${BOOTSRAP_KAFKA_SERVER:localhost}:${SERVER1_PORT:9091}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.properties.delivery.timeout.ms=120000
spring.kafka.producer.properties.linger.ms=0
spring.kafka.producer.properties.request.timeout.ms=30000
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.allow.auto.create.topics=false
spring.kafka.consumer.group-id=shipments-ms
spring.kafka.consumer.properties.allow.auto.create.topics=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=fpl.soa.common.*

shipment.event.topic.name=shipments-events
shipment.commands.topic.name=shipments-commands